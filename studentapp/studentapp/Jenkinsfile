pipeline {
    agent any

    environment {
        IMAGE_NAME = "studentapp"
        CONTAINER_NAME = "studentapp"
        PORT = "2025"
        DATA_VOLUME = "data"
        APP_DIR = "studentapp/studentapp"  // Path to pom.xml and Dockerfile
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/NAMPALLY-PRANAY/Student-management-ci-cd.git'
            }
        }

        stage('Build with Maven') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        if (isUnix()) {
                            sh './mvnw clean package -DskipTests'
                        } else {
                            bat '.\\mvnw.cmd clean package -DskipTests'
                        }
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        if (isUnix()) {
                            sh "docker build -t ${IMAGE_NAME}:latest ."
                        } else {
                            bat "docker build -t %IMAGE_NAME%:latest ."
                        }
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    if (isUnix()) {
                        sh "docker rm -f ${CONTAINER_NAME} || true"
                        sh "docker run -d -p ${PORT}:2025 -v ${DATA_VOLUME}:/app/data --name ${CONTAINER_NAME} ${IMAGE_NAME}:latest"
                    } else {
                        bat "docker rm -f %CONTAINER_NAME% || exit 0"
                        bat "docker run -d -p %PORT%:2025 -v %CD%\\${APP_DIR}\\data:/app/data --name %CONTAINER_NAME% %IMAGE_NAME%:latest"
                    }
                }
            }
        }

        stage('Postman/API Test (Optional)') {
            steps {
                echo "You can add Newman (Postman CLI) here to run API tests"
            }
        }
    }

    post {
        always {
            echo "Pipeline finished. Check container logs if needed."
        }
    }
}
